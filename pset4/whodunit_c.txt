#include <stdio.h>
#include <stdlib.h>
#include "bmp.h"
int main(int argv, char* args[])
{
    if(argv!=3)
    {
        fprintf(stderr, "Usage: ./whodunit infile outfile\n");
        return 1;
    }
    FILE* inptr = fopen(args[1], "r");
    if (inptr == NULL)
    {
        fprintf(stderr, "Usage: ./whodunit infile outfile\n");
        return 2;
    }
    FILE* outptr = fopen(args[2], "w");
    if (outptr == NULL)
    {
        fprintf(stderr, "Usage: ./whodunit infile outfile\n");
        return 3;
    }
     BITMAPFILEHEADER bf;
    fread(&bf, sizeof(BITMAPFILEHEADER), 1, inptr);
    BITMAPINFOHEADER bi;
    fread(&bi, sizeof(BITMAPINFOHEADER), 1, inptr);
    if (bf.bfType != 0x4d42 || bf.bfOffBits != 54 || bi.biSize != 40 || 
        bi.biBitCount != 24 || bi.biCompression != 0)
    {
        fclose(outptr);
        fclose(inptr);
        fprintf(stderr, "Usage: ./whodunit infile outfile\n");
        return 4;
    }
    fwrite(&bf, sizeof(BITMAPFILEHEADER), 1, outptr);
    fwrite(&bi, sizeof(BITMAPINFOHEADER), 1, outptr);
    int padding =  (4 - (bi.biWidth * sizeof(RGBTRIPLE)) % 4) % 4;
    for (int i = 0, biHeight = abs(bi.biHeight); i < biHeight; i++)
    {
        for (int j = 0; j < bi.biWidth; j++)
        {
            RGBTRIPLE triple;
            fread(&triple, sizeof(RGBTRIPLE), 1, inptr);
            triple.rgbtGreen = 0x000000;
            triple.rgbtBlue = 0x000000;
            fwrite(&triple, sizeof(RGBTRIPLE), 1, outptr);
        }
        fseek(inptr, padding, SEEK_CUR);
        for (int k = 0; k < padding; k++)
            fputc(0x00, outptr);
    }
    fclose(inptr);
    fclose(outptr);
    return 0;
}